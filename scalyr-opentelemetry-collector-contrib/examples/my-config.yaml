receivers:
  filelog:
    include:
    #- /var/log/busybox/*.log
    - /var/lib/docker/containers/cf79f880f414937e7befa0e4d2770590a19d83058b4f5df0e1cd22d819c836b3/cf79f880f414937e7befa0e4d2770590a19d83058b4f5df0e1cd22d819c836b3-json.log
    #storage: file_storage/filelogreceiver
    #start_at: beginning
    operators:
    - id: get-format
      routes:
      - expr: body matches "^\\{"
        output: parser-docker
      type: router
    - id: parser-docker
      timestamp:
        layout: '%Y-%m-%dT%H:%M:%S.%LZ'
        parse_from: attributes.time
      type: json_parser
    - from: attributes.log
      to: body
      type: move

processors:
  transform:
    error_mode: ignore
    log_statements:
      - context: log
        statements:
          # Parse body as JSON and merge the resulting map with the cache map, ignoring non-json bodies.
          # cache is a field exposed by OTTL that is a temporary storage place for complex operations.
          - merge_maps(cache, ParseJSON(body), "upsert") where IsMatch(body, "^\\{")

          # Set attributes using the values merged into cache.
          # If the attribute doesn't exist in cache then nothing happens.
          - set(attributes["message"], cache["message"])
          - set(attributes["severity"], cache["log.level"])
          - merge_maps(attributes, cache, "upsert")

extensions:
  file_storage/filelogreceiver:
    directory: /home/chrismark/otelcol/file_storage/freceiver
  file_storage/otcouput:
    directory: /home/chrismark/otelcol/file_storage/output

service:
  extensions: [file_storage/filelogreceiver, file_storage/otcouput]
  pipelines:
    logs:
      receivers: [filelog]
      exporters: [otlp/elastic]
      processors: [transform]
#  telemetry:
#    logs:
#      level: "debug"

exporters:
  otlp/elastic:
    endpoint: http://0.0.0.0:8200
    sending_queue:
      storage: file_storage/otcouput
    tls:
      insecure: true
      insecure_skip_verify: true
